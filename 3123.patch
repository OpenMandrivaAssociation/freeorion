From 84ebef3844bb2fb00ff0159613097f9af1740904 Mon Sep 17 00:00:00 2001
From: geoffthemedio <geoffthemedio@gmail.com>
Date: Sun, 26 Jul 2020 23:49:34 +0200
Subject: [PATCH] Fixes errors with boost::placeholders::_1 and _2 and _3

---
 UI/FleetWnd.cpp      | 10 +++++++---
 UI/ObjectListWnd.cpp |  2 ++
 2 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/UI/FleetWnd.cpp b/UI/FleetWnd.cpp
index c930992585..8d5542f67e 100644
--- a/UI/FleetWnd.cpp
+++ b/UI/FleetWnd.cpp
@@ -2412,12 +2412,14 @@ FleetDetailPanel::FleetDetailPanel(GG::X w, GG::Y h, int fleet_id, bool order_is
         m_ships_lb->AllowDropType(SHIP_DROP_TYPE_STRING);
     }
 
+    namespace ph = boost::placeholders;
+
     m_ships_lb->SelRowsChangedSignal.connect(
-        boost::bind(&FleetDetailPanel::ShipSelectionChanged, this, _1));
+        boost::bind(&FleetDetailPanel::ShipSelectionChanged, this, ph::_1));
     m_ships_lb->RightClickedRowSignal.connect(
-        boost::bind(&FleetDetailPanel::ShipRightClicked, this, _1, _2, _3));
+        boost::bind(&FleetDetailPanel::ShipRightClicked, this, ph::_1, ph::_2, ph::_3));
     GetUniverse().UniverseObjectDeleteSignal.connect(
-        boost::bind(&FleetDetailPanel::UniverseObjectDeleted, this, _1));
+        boost::bind(&FleetDetailPanel::UniverseObjectDeleted, this, ph::_1));
 }
 
 void FleetDetailPanel::CompleteConstruction() {
@@ -2812,6 +2814,8 @@ void FleetWnd::CompleteConstruction() {
     // determine fleets to show and populate list
     Refresh();
 
+    using boost::placeholders::_1;
+
     // create drop target
     m_new_fleet_drop_target = GG::Wnd::Create<FleetDataPanel>(GG::X1, ListRowHeight(), m_system_id, true);
     AttachChild(m_new_fleet_drop_target);
diff --git a/UI/ObjectListWnd.cpp b/UI/ObjectListWnd.cpp
index d2810548f9..f21479aba0 100644
--- a/UI/ObjectListWnd.cpp
+++ b/UI/ObjectListWnd.cpp
@@ -1902,6 +1902,8 @@ class ObjectListBox : public CUIListBox {
         m_header_row = GG::Wnd::Create<ObjectHeaderRow>(GG::X1, ListRowHeight());
         SetColHeaders(m_header_row); // Gives ownership
 
+        using boost::placeholders::_1;
+
         m_header_row->ColumnsChangedSignal.connect(
             boost::bind(&ObjectListBox::Refresh, this));
         m_header_row->ColumnHeaderLeftClickSignal.connect(
