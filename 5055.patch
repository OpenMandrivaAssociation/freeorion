diff -uraN freeorion-0.5.1-rc1/GG/src/Font.cpp omv-freeorion-0.5.1-rc1/GG/src/Font.cpp
--- freeorion-0.5.1-rc1/GG/src/Font.cpp	2024-12-28 18:52:17.263482575 +0100
+++ omv-freeorion-0.5.1-rc1/GG/src/Font.cpp	2024-12-28 18:51:01.415712407 +0100
@@ -2758,29 +2758,13 @@
     sregex_iterator it(text.begin(), text.end(), regex);
 
     const sregex_iterator end_it;
-    while (it != end_it)
-    {
-        // Consolidate adjacent blocks of text.
-        // If adjacent found substrings are all text, merge them into a single Substring.
-        bool need_increment = true;
-        Substring combined_text;
-        sub_match<std::string::const_iterator> const* text_match = nullptr;
-        while (it != end_it &&
-               (text_match = &(*it)[text_tag_idx]) &&
-               text_match->matched)
-        {
-            need_increment = false;
-            if (combined_text.empty())
-                combined_text = Substring(text, *text_match);
-            else
-                combined_text += *text_match;
-            ++it;
-        }
 
         const auto& it_elem = *it;
 
-        if (!combined_text.empty()) {
-            text_elements.emplace_back(combined_text); // Basic text element.
+        if (it_elem[text_tag_idx].matched) {
+            auto matched_text = Substring(text, it_elem[text_tag_idx]);
+            if (!matched_text.empty())
+                text_elements.emplace_back(matched_text); // Basic text element.
 
         } else if (it_elem[open_bracket_tag_idx].matched) {
             // Open XML tag.
@@ -2821,8 +2805,6 @@
                 text_elements.emplace_back(NEWLINE);
         }
 
-        if (need_increment)
-            ++it;
     }
 
     // fill in the widths of code points in each TextElement
